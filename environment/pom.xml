<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <!-- This pom has been autogenerated via maven archetypes. Please refer to:
       
       http://twiki.buongiorno.com/BundledMavenArchetypes
       
       for relevant documentation.
       
       You can also refer to accompanying README files within distribution directories
       under src/main for a quick reference.
       
       Please remember to remove all uneeded directories under src/main before 
       committing a new environment to source code repository.
    -->
  <parent>
    <groupId>com.buongiorno.pti.bundles.static</groupId>
    <artifactId>static-env-base</artifactId>
    <version>1.0.31</version>
  </parent>

  <properties>
    <!-- Complete list of properties available in com.buongiorno.pti.bundles.static:static-delivery:${parent.version}:pom -->
    <my.businessline>pti</my.businessline>
    <my.country></my.country><!-- may be void if multicountry -->
    <my.project>qa</my.project>
    <my.component>_crais</my.component>
    <static.extra.dirs/>
    <!-- Comma separated list of extra directories to be created 
	 during packaging phase that will be present on final environment -->
    <!-- Have a look at parent pom for available customization properties -->
    <service.suffix>daemon</service.suffix>
  </properties>

  <groupId>com.buongiorno.pti</groupId>
  <artifactId>pti-qa-crais-static</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Static installation for project qa (crais component)</name>
  <description>${my.businessline} ${my.country} ${my.project} ${my.component} static</description>
  
  <!-- 
       
       Please add your zipped code dependencies with ${static.code.classifier} classifier (default code) here. Delivery logic will overlay
       their content under ${static.service.home} (if ${static.code.destination} is not set) including paths specified in
       ${static.code.includepaths} (default bin/**,lib*/**) without transitive deps (otherwise set
       ${static.code.excludeTransitive} to false) and optionally subsetted per artifact
       (set ${static.code.useSubDirectoryPerArtifact} to true).
   
       Zipped addons dependencies with ${static.addons.classifier} classifier (default addons) go here and will be unpacked
       under ${static.code.destination} (defaults to addons/) including paths specified in
       ${static.addons.includepaths} (defaults to **) without transitive deps (otherwise set
       ${static.addons.excludeTransitive} to false) and subsetted per artifact
       (set ${static.addons.useSubDirectoryPerArtifact} to false otherwise).
       
       External plugin static content may be stored under src/main/${static.plugins.dir} and copied (unfiltered) under
       ${static.service.home}/${static.plugins.dir.to}.
       
       Jar dependencies will be copied under ${static.jar.destination} (default to lib/) along with transitive deps
       (otherwise set ${static.jar.excludeTransitive} to true) with versions optionally stripped
       (set ${static.jar.stripVersion} to true). 
       
       War dependencies will be copied under ${static.war.destination} (default to lib/) along with transitive deps
       (otherwise set ${static.war.excludeTransitive} to true) with versions optionally stripped
       (set ${static.war.stripVersion} to true) and optionally subsetted per artifact
       (set ${static.jar.plugins.useSubDirectoryPerArtifact} to true). War archives may be copied exploded by
       setting ${static.war.dependency.plugin.goal} to unpack-dependencies (default value is copy-dependencies). 
       
       Plugins jar dependencies (with classifier ${static.plugins.classifier}, default 'plugin') will be copied
       under ${static.jar.plugins.destination} (default to plugins/) along with transitive deps
       (otherwise set ${static.jar.plugins.excludeTransitive} to true) with versions optionally stripped
       (set ${static.jar.plugins.stripVersion} to true) and optionally subsetted per artifact
       (set ${static.jar.plugins.useSubDirectoryPerArtifact} to true).
       
       Please refer to release team for advice, or write to tech.release@buongiorno.com.
       
    -->
    <dependencies>
    	<dependency>
    		<groupId>com.buongiorno.pti</groupId>
    		<artifactId>ptiqa-crais-app</artifactId>
    		<version>0.1-SNAPSHOT</version>
    		<classifier>code</classifier>
    		<type>zip</type>
		</dependency>
	</dependencies>
</project>
